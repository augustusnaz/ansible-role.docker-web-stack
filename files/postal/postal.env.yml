web:
  # The host that the management interface will be available on
  host: ${WEB_DOMAIN}
  # The protocol that requests to the management interface should happen on
  protocol: https

fast_server:
  # This can be enabled to enable click & open tracking on emails. It is disabled by
  # default as it requires a separate static IP address on your server.
  enabled: false
  bind_address:

general:
  # This can be changed to allow messages to be sent from multiple IP addresses
  use_ip_pools: false

main_db:
  # Specify the connection details for your MySQL database
  host: ${DB_HOST}
  username: ${DB_USERNAME}
  password: ${DB_PASSWORD}
  database: ${DB_DATABASE}

message_db:
  # Specify the connection details for your MySQL server that will be house the
  # message databases for mail servers.
  host: ${DB_HOST}
  username: ${DB_USERNAME}
  password: ${DB_PASSWORD}
  prefix: ${DB_PREFIX}

rabbitmq:
  # Specify the connection details for your RabbitMQ server.
  host: ${RABBITMQ_HOST}
  username: ${RABBITMQ_USER}
  password: ${RABBITMQ_PASS}
  vhost: ${RABBITMQ_VHOST}

dns:
  # Specifies the DNS record that you have configured. Refer to the documentation at
  # https://github.com/atech/postal/wiki/Domains-&-DNS-Configuration for further
  # information about these.
  mx_records:
    - mx.${DOMAIN}
  smtp_server_hostname: ${DOMAIN}
  spf_include: spf.${DOMAIN}
  return_path: rp.${DOMAIN}
  route_domain: routes.${DOMAIN}
  track_domain: track.${DOMAIN}

smtp:
  # Specify an SMTP server that can be used to send messages from the Postal management
  # system to users. You can configure this to use a Postal mail server once the
  # your installation has been set up.
  host: 127.0.0.1
  port: 2525
  username: # Complete when Postal is running and you can
  password: # generate the credentials within the interface.
  from_name: Postal
  from_address: postal@${DOMAIN}

rails:
  secret_key: ${RAILS_SECRET_KEY}

web_server:
  bind_address: 0.0.0.0
